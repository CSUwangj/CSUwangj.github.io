<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>LuckyDog | CSUwangj&#x27;s Blog - PPC</title>
	<link href="https://CSUwangj.github.io/tags/PPC/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://CSUwangj.github.io/"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2020-08-07T01:48:37.602645+08:00</updated>
	<id>https://CSUwangj.github.io/tags/PPC/atom.xml</id>
	<entry xml:lang="en">
		<title>*ctf magic_number WP</title>
		<published>2018-04-27T21:48:19+08:00</published>
		<updated>2020-08-07T01:48:37.602645+08:00</updated>
		<link rel="alternate" href="https://CSUwangj.github.io/ctf-magic-number-wp/" type="text/html"/>
		<id>https://CSUwangj.github.io/ctf-magic-number-wp/</id>
		<content type="html">&lt;p&gt;99次内猜14个[0,1023]内的数，那肯定是不仅二分而且要整体二分了&lt;&#x2F;p&gt;
&lt;p&gt;简单说来是&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;CSUwangj.github.io&#x2F;ctf-magic-number-wp&#x2F;1524837016603.png&quot; alt=&quot;伪代码&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;于是可以写出代码&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;#!&amp;#x2F;bin&amp;#x2F;python3

from pwn import *
r = remote(&amp;quot;47.89.18.224&amp;quot;, 10011)


nums = []


def query(l, r, rm):
    &amp;quot;&amp;quot;&amp;quot;
    Send the query and get answer
    :param l: &amp;lt;int&amp;gt; left bound
    :param r: &amp;lt;int&amp;gt; Right bound
    :param rm: &amp;lt;remote&amp;gt; Remote process
    :return: Amount of numbers
    &amp;quot;&amp;quot;&amp;quot;
    payload =&amp;quot;? &amp;quot; + str(l) + &amp;quot; &amp;quot; + str(r) + &amp;quot;\n&amp;quot;
    rm.send(payload)
    res = int(rm.recv())
    print payload + str(res)
    return res


def find(l, r, k, rm):
    &amp;quot;&amp;quot;&amp;quot;
    Guess numbers
    :param l: &amp;lt;int&amp;gt; Left bound
    :param r: &amp;lt;int&amp;gt; Right bound
    :param k: &amp;lt;int&amp;gt; Amount of numbers
    :param rm: &amp;lt;remote&amp;gt; Remote process
    :return: None
    &amp;quot;&amp;quot;&amp;quot;
    global nums
    if l == r - 1 and k == 1:
        nums.append(l)
        return None
    m = (l + r) &amp;#x2F;&amp;#x2F; 2
    K = query(l, m, rm)
    if K:
        find(l, m, K, rm)
    if K - k:
        find(m, r, k - K, rm)


def gate(rm):
    &amp;quot;&amp;quot;&amp;quot;
    gate
    :param rm: &amp;lt;remote&amp;gt; Remote process
    :return: None
    &amp;quot;&amp;quot;&amp;quot;
    global nums
    rm.recvuntil(&amp;quot;n = &amp;quot;)
    k = int(rm.recv())
    nums = []
    find(0, 1024, k, r)
    nums.sort()
    print(nums)
    rm.interactive()


gate(r)
gate(r)
gate(r)

# 这里gate(r)一次就过一关，多少关我也忘了
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
</feed>
